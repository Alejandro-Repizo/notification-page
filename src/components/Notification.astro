---
export interface Props {
	photo: string;
	user: string;
	action: string;
	event?: string;
	type?: string;
	date: string;
	read: boolean;
	content?: {
		text?: string;
		image?: string;
	};
}

const {photo, user, action, event, type = "post", date, content, read} = Astro.props;

const hasContent =
	typeof content !== "undefined" && Object.keys(content).length > 0;

const isImage = hasContent && Object.keys(content).includes("image");
---

<article class={`notification ${!read ? 'notification--active': ''}`}>
	<img src={photo} alt={user} class="notification__image" />
	<div class="notification__body">
		<p>
			<a href="#" class="notification__user">{user}</a>
			{action}
			<a href="#" data-type={type}>
				{event}
			</a>
		</p>
		<small class="notification__date">{date}</small>
	</div>

	{
		hasContent ? (
			<a
				href="#"
				class="notification__content"
				data-content={Object.keys(content)[0]}>
				{isImage ? (
					<img src={content.image} class="notification__image" alt="Notification Image" />
				) : content.text }
			</a>
		) : null
	}
</article>

<style>
	a {
		--text-color: var(--clr-neutral-blue-600);

		text-decoration: none;
		font-weight: bold;
		color: var(--text-color);
		transition: 500ms background-color ease;
	}

	a:hover {
		--text-color: var(--clr-primary-blue);
	}

	a[data-type="group"] {
		--text-color: var(--clr-primary-blue);
	}

	.notification {
		--bg-color: transparent;

		width: 100%;
		padding: 0.6rem 0.8rem;
		display: grid;
		grid-template-columns: min(45px, 15%) 1fr;
		gap: 0.5rem 1rem;
		background-color: var(--bg-color);
		border-radius: 0.5rem;
		font-size: clamp(0.7rem, 4vw + 1rem, 0.9rem);
	}

	.notification--active {
		--bg-color: var(--clr-neutral-blue-100);
		box-shadow: 0px 2px 0.2rem 0px var(--clr-neutral-blue-200);
	}

	.notification--active p::after {
		content: "";
		margin: .0625rem .375rem ;
		display: inline-block;
		width: .5rem;
		aspect-ratio: 1;
		border-radius: 50%;
		background-color: var(--clr-primary-red);
	}

	.notification__image {
		width: 100%;
		height: auto;
	}

	.notification__date {
		color: var(--clr-neutral-blue-400);
	}

	.notification__content[data-content="text"] {
		grid-column: 2 / -1;
		border: 1px solid var(--clr-neutral-blue-300);
		border-radius: 0.3rem;
		padding: 0.9rem;
		font-weight: normal;
	}

	.notification:has(.notification__content[data-content="image"]) {
		grid-template-columns: min(45px, 15%) 1fr min(45px, 15%);
	}
</style>
